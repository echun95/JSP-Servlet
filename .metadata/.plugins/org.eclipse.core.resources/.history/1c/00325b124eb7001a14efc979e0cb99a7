package kr.or.ddit.listener;

import java.util.Hashtable;

import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpSessionAttributeListener;
import javax.servlet.http.HttpSessionBindingEvent;
import javax.servlet.http.HttpSessionEvent;
import javax.servlet.http.HttpSessionListener;

public class SessionManager implements HttpSessionAttributeListener,
		HttpSessionListener {
	public static SessionManager sessionManager = new SessionManager();
	
	//생성된 모든 세션(모든 클라이언트)들을 저장
	public static Hashtable<String, Object> sessionMoniter;
	
	public SessionManager(){
		if(sessionMoniter == null){
			sessionMoniter = new Hashtable<String,Object>();
		}
	}
	
	public static synchronized SessionManager getInstance(){
		if(sessionManager == null){
			sessionManager = new SessionManager();
		}
		return sessionManager;
	}
	
	@Override
	public void sessionCreated(HttpSessionEvent event) {
		HttpSession newSession = event.getSession();
		synchronized (sessionMoniter) {
			sessionMoniter.put(newSession.getId(), newSession);
		}
	
	}

	@Override
	public void sessionDestroyed(HttpSessionEvent arg0) {
	}

	@Override
	public void attributeAdded(HttpSessionBindingEvent arg0) {
	}

	@Override
	public void attributeRemoved(HttpSessionBindingEvent arg0) {
	}

	@Override
	public void attributeReplaced(HttpSessionBindingEvent arg0) {
	}

}
