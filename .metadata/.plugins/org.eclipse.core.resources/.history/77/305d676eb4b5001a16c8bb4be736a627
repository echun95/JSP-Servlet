<%@page import="org.apache.commons.fileupload.disk.DiskFileItemFactory"%>
<%@page import="org.apache.commons.fileupload.servlet.ServletFileUpload"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	//클라이언트(브라우저) 보안정책(Security Policy) : 
	//    브라우저는 해당 하드웨어 시스템 내 파일 또는 디렉토리에 접근은 가능하지만, 
	//	     신규파일 또는 디렉토리의 생성, 파일 및 디렉토리 수정과 삭제는 불가.
	//	  * IE ActiveX를 활용해서 파일 생성, 수정, 삭제가 가능.
	//서버의 파일 업로드 처리 개발환경
	//	  1. 라이브러리
	//	     http://commons.apache.org
	//			commons-fileupload-1.2.2.jar
	//			commons-io-2.3.jar
	//		 WEB-INF/lib	import
	
	//서버 대상 업로드된 파일의 저장 처리 : 서버 내 특정 파일 시스템 활용
	//						파일 정보들은 DB 대상 저장
		
	String fileSavePath = application.getRealPath("/upload");
	int fileSizeMax = 1024*1024*100; //100메가
	
	//클라이언트(브라우저) 서버 대상 요청
	//   일반 요청
	//		직접 브라우저의 주소창에 URL 입력.
	//		location.href = '주소'
	//		location.replace('주소')
	//		<a href='주소'>클릭</a>
	//		form 태그(enctype=application/x-www-form-urlencoded)
	//		ajax
	//   스트리밍 요청(파일)
	//	 	form 태그(method=post, enctype=multipart/form-data)
	//		ajax(method=post, enctype=multipart/form-data)
	boolean multipartFlag = ServletFileUpload.isMultipartContent(request);
	if(multipartFlag){
		// 서버의 업로드 된 파일 처리
		//   1. 업로드된 파일의 임시저장소 저장(서버 내 서버가 관리하는 파일 시스템, 서버의 메모리)
		//      * 임시저장소에 저장되는 파일의 확장자는 : *.tmp
		//		* 임시저장소 저장 대상 파일의 사이즈 제한
		//		* 임시저장소로 활용되는 서버 내 특정 파일 패스를 지정
		//   2. 업로드된 파일의 실제 저장소 저장
		//      * 실제저장소 저장 대상 파일의 사이즈 제한
		//		* 실제저장소로 활용될 서버 내 특정 파일 패스 지정 가능
		//		* 임시저장소에 저장된 파일의 실제저장소 저장시 임시저장소에 저장되었던 임시 파일 자동 삭제
		DiskFileItemFactory factory = new DiskFileItemFactory();
		
		
	}
	
	
	
%>    











